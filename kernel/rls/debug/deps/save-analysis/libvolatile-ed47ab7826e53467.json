{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"volatile","disambiguator":[15316767590160924206,8547251724281031154]},"crate_root":"/home/argos/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.2.4/src","external_crates":[{"file_name":"/home/argos/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.2.4/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[714512203731086191,2869256915080255377]}},{"file_name":"/home/argos/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.2.4/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9464329963319564510,7501656092555883702]}}],"span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":8443,"line_start":1,"line_end":300,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":8443,"line_start":1,"line_end":300,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/argos/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.2.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":34},{"krate":0,"index":40},{"krate":0,"index":36},{"krate":0,"index":10},{"krate":0,"index":44},{"krate":0,"index":50},{"krate":0,"index":46},{"krate":0,"index":20},{"krate":0,"index":54},{"krate":0,"index":60},{"krate":0,"index":56},{"krate":0,"index":26},{"krate":0,"index":32}],"decl_id":null,"docs":" Provides wrapper types `Volatile`, `ReadOnly`, `WriteOnly`, `ReadWrite`, which wrap any copy-able type and allows for\n volatile memory access to wrapped value. Volatile memory accesses are never optimized away by\n the compiler, and are useful in many low-level systems programming and concurrent contexts.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1206,"byte_end":1216,"line_start":28,"line_end":28,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1572,"byte_end":1580,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"Volatile","qualname":"::Volatile","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper type around a volatile variable, which allows for volatile reads and writes\n to the contained value. The stored type needs to be `Copy`, as volatile reads and writes\n take and return copies of the value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2284,"byte_end":2287,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<Volatile<T>>::new","value":"fn (value: T) -> Volatile<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2908,"byte_end":2912,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"read","qualname":"<Volatile<T>>::read","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3649,"byte_end":3654,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"write","qualname":"<Volatile<T>>::write","value":"fn (&mut self, value: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4342,"byte_end":4348,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"name":"update","qualname":"<Volatile<T>>::update","value":"fn <F> (&mut self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":44},"span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4663,"byte_end":4671,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"ReadOnly","qualname":"::ReadOnly","value":"","parent":null,"children":[],"decl_id":null,"docs":" A volatile wrapper which only allows read operations.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5428,"byte_end":5431,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadOnly<T>>::new","value":"fn (value: T) -> ReadOnly<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5889,"byte_end":5893,"line_start":195,"line_end":195,"column_start":12,"column_end":16},"name":"read","qualname":"<ReadOnly<T>>::read","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":54},"span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6100,"byte_end":6109,"line_start":204,"line_end":204,"column_start":12,"column_end":21},"name":"WriteOnly","qualname":"::WriteOnly","value":"","parent":null,"children":[],"decl_id":null,"docs":" A volatile wrapper which only allows write operations.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6871,"byte_end":6874,"line_start":235,"line_end":235,"column_start":12,"column_end":15},"name":"new","qualname":"<WriteOnly<T>>::new","value":"fn (value: T) -> WriteOnly<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7317,"byte_end":7322,"line_start":253,"line_end":253,"column_start":12,"column_end":17},"name":"write","qualname":"<WriteOnly<T>>::write","value":"fn (&mut self, value: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":32},"span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7613,"byte_end":7622,"line_start":263,"line_end":263,"column_start":10,"column_end":19},"name":"ReadWrite","qualname":"::ReadWrite","value":"Volatile<T>","parent":null,"children":[],"decl_id":null,"docs":" A volatile wrapper which allows both read and write operations;\n functionally equivalent to the `Volatile` type, as it is a type\n alias for it.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1609,"byte_end":1617,"line_start":40,"line_end":40,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4710,"byte_end":4718,"line_start":149,"line_end":149,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6148,"byte_end":6157,"line_start":206,"line_end":206,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1609,"byte_end":1617,"line_start":40,"line_end":40,"column_start":15,"column_end":23},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4710,"byte_end":4718,"line_start":149,"line_end":149,"column_start":15,"column_end":23},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":44},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,97,114,103,111,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,118,111,108,97,116,105,108,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6148,"byte_end":6157,"line_start":206,"line_end":206,"column_start":15,"column_end":24},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}}]}