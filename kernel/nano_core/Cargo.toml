[package]
name = "nano_core"
version = "0.1.0"
authors = ["Kevin Boos <kevinaboos@gmail.com>"]
description = "The minimalist crate that takes over after the bootloader and is responsible for pre-initialization of Theseus, before handing off control to the captain"
edition = "2021"


[dependencies]
cfg-if = "1.0.0"
multiboot2 = { version = "0.14.0", optional = true }
libm = "0.2.1"
log = "0.4.8"

irq_safety = { git = "https://github.com/theseus-os/irq_safety" }
compiler_builtins = { version = "0.1.101", features = ["mem"] }

kernel_config = { path = "../kernel_config" }
state_store = { path = "../state_store" }
memory = { path = "../memory" }
no_drop = { path = "../no_drop" }
early_tls = { path = "../early_tls" }
stack = { path = "../stack" }
mod_mgmt = { path = "../mod_mgmt" }
panic_entry = { path = "../panic_entry" }
serial_port_basic = { path = "../serial_port_basic" }
memory_initialization = { path = "../memory_initialization" }
boot_info = { path = "../boot_info" }
captain = { path = "../captain" }
early_printer = { path = "../early_printer" }
logger = { path = "../logger" }
libtheseus = { path = "../libtheseus" }

[target.'cfg(target_arch = "x86_64")'.dependencies]
exceptions_early = { path = "../exceptions_early" }

[dependencies.uefi-bootloader-api]
git = "https://github.com/theseus-os/uefi-bootloader"
optional = true

[build-dependencies]
cfg-if = "1.0.0"

[features]
default = [ "bios" ]
## Build for a system that boots via legacy BIOS (multiboot2).
bios = ["boot_info/multiboot2", "early_printer/bios", "dep:multiboot2"]
## Build for a system that boots via UEFI.
uefi = ["boot_info/uefi", "dep:uefi-bootloader-api"]

[lib]
# staticlib is required to build a self-contained, fully-linked .a file 
# that we can jump to from the bootloader.
crate-type = ["staticlib"]

## Currently not used; see the `build.rs` script.
# [build-dependencies]
# built = "0.5"
