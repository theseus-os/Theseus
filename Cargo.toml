[workspace]
resolver = "2"


## Here, we specify that all subdirectories in the kernel/ and applications/ directories should be built, 
## except for those starting with a "." So, we build all kernel and application crates except hidden directories.
members = [
	"kernel/nano_core",
	"applications/shell",

	# "kernel/[!.]*/",
	# "applications/[!.]*/",
	"ports/theseus_std",
	"theseus_features",
]



exclude = [
	## Exclude the build directories
	"build",
	"target",

	## Exclude configuration, tools, scripts, etc
	"cfg",
	"compiler_plugins",
	"scripts",
	"tools",

	## Exclude old components
	"old_crates",
	"userspace",

	## Exclude third-party libs and ports for now.
	## Only the ones used as direct dependencies by core Theseus crates
	## should be included in the workspace build by default.
	"libs",
	"ports",

	## Exclude tlibc and libtheseus, which are currently built separately.
	"tlibc",
	"libtheseus",

	## exclude unused test applications by default
	"applications/test_exception",
	"applications/test_exception2",
	"applications/test_filerw",
	"applications/heap_eval",
	"applications/test_mutex_sleep",
	"applications/test_wait_queue",
	"applications/test_ixgbe",
	# "applications/test_backtrace",

	## Testing: exclusion of wasm stuff
	"applications/",
	"applications/wasm",
	"applications/ps",
	"applications/cpu",
	"kernel/wasi_interpreter",
]


[patch.crates-io]
### Patch `spin` to use the `pause` asm instruction in busy-wait loops,
### because the `core::hint::spin_loop()` only uses it if "sse2" is enabled.
spin = { git = "https://github.com/theseus-os/spin-rs" }
### use our own version of volatile which supports zerocopy
volatile = { git = "https://github.com/theseus-os/volatile" }
### use our own no_std-compatilbe getopts
getopts = { git = "https://github.com/theseus-os/getopts" }
### use our own no_std-compatible qp trie
qp-trie = { git = "https://github.com/theseus-os/qp-trie-rs" }
### use the latest version of smoltcp from github; the one on crates.io is out of date
smoltcp = { git = "https://github.com/m-labs/smoltcp" }

### Patch `libc` so we can use libc-specific types when using `cfg(target_os = "theseus")`.
libc = { path = "ports/libc" }
### Patch `core2` with newer functions from `std::io`, e.g., additional `Seek` trait functions
core2 = { path = "libs/core2" }

##############################################################################################
#################### Below are patches for wasmtime-related crates. ##########################
################# These are currently unused, but are available for use. #####################
##############################################################################################
# object = { path = "libs/object" }
# backtrace = { path = "ports/backtrace" }
# region = { path = "ports/region" }
# thiserror_core2 = { path = "libs/thiserror-core2" }

### These profiles fix the new rustc behavior of splitting one crate into many object files. 
### That messes up our module loading, which is bad!
### See this link about profiles: https://doc.rust-lang.org/cargo/reference/manifest.html
# workaround rust-lang/rust#47074
[profile.dev]
codegen-units = 1
incremental = false

# workaround rust-lang/rust#47074
[profile.release]
codegen-units = 1
incremental = false

