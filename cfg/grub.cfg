# Copyright 2016 Philipp Oppermann. See the README.md
# file at the top-level directory of this distribution.
#
# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
# option. This file may not be copied, modified, or distributed
# except according to those terms.

set timeout=0
set default=0


# NOTE: we're using multiboot2, so we have to use "multiboot2" and "module2"
# for the module2 command, the argument after the module path is the module name string

menuentry "Theseus OS" {
    # the initial boot image, i.e., the kernel itself
    multiboot2 /boot/kernel.bin
    # the nano_core symbol file for parsing
    module2 /modules/__k_nano_core.sym       __k_nano_core
    # the libcore object ELF file, for loading
    module2 /modules/__k_libcore.o           __k_libcore
    module2 /modules/__k_captain.o           __k_captain
  
    # our list of kernel module crates
    module2 /modules/__k_util.o              __k_util
    module2 /modules/__k_atomic.o            __k_atomic
    module2 /modules/__k_port_io.o           __k_port_io
    module2 /modules/__k_serial_port.o       __k_serial_port
    module2 /modules/__k_irq_safety.o        __k_irq_safety
    module2 /modules/__k_bit_field.o         __k_bit_field
    module2 /modules/__k_log.o               __k_log
    module2 /modules/__k_x86_64.o            __k_x86_64
    module2 /modules/__k_pit_clock.o         __k_pit_clock
    module2 /modules/__k_tsc.o               __k_tsc

    module2 /modules/__k_keycodes_ascii.o    __k_keycodes_ascii
	module2 /modules/__k_console_types.o     __k_console_types
    module2 /modules/__k_keyboard.o          __k_keyboard
	module2 /modules/__k_console.o           __k_console
	module2 /modules/__k_scheduler.o         __k_scheduler

	module2 /modules/__k_spin.o         	 __k_spin
	module2 /modules/__k_pci.o        		 __k_pci
	module2 /modules/__k_ioapic.o         	 __k_ioapic
	module2 /modules/__k_raw_cpuid.o         __k_raw_cpuid
	module2 /modules/__k_apic.o         	 __k_apic
	module2 /modules/__k_tss.o         		 __k_tss
	module2 /modules/__k_gdt.o         		 __k_gdt
	module2 /modules/__k_pic.o         		 __k_pic
	module2 /modules/__k_vga_buffer.o        __k_vga_buffer
	module2 /modules/__k_interrupts.o        __k_interrupts

	module2 /modules/__k_task.o         	 __k_task
	module2 /modules/__k_spawn.o         	 __k_spawn
	module2 /modules/__k_dbus.o         	 __k_dbus
	module2 /modules/__k_syscall.o         	 __k_syscall
	module2 /modules/__k_ap_start.o          __k_ap_start

	module2 /modules/__k_acpi.o         	 __k_acpi
	module2 /modules/__k_e1000.o         	 __k_e1000
	module2 /modules/__k_driver_init.o       __k_driver_init


    # userspace programs are currently loaded as modules too
    module2 /modules/test_program            test_program
    module2 /modules/syscall_send            syscall_send
    module2 /modules/syscall_receive         syscall_receive


    # start the actual kernel!
    boot
}
